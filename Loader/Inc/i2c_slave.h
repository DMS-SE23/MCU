/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __I2C_SLAVE_H
#define __I2C_SLAVE_H

/* Includes ------------------------------------------------------------------*/
/* Exported types ------------------------------------------------------------*/
typedef enum {NOEVENT = 0, EVENT_NOTYET_READ = 1,EVENT_READ =2} EventStatus;


#define ClockSpeed			100000
#define DEF_VPM_I2C_SLAVE_ADDRESS       0xF0
#define __DEF_EVENT_QUEUE_SIZE          64

/* I2C SPE mask */
#define CR1_PE_Set              ((uint16_t)0x0001)
#define CR1_PE_Reset            ((uint16_t)0xFFFE)

/*Indicate a complete i2c event is received or not*/
extern EventStatus i2c_event;
/*i2c slave received command*/
extern uint8_t i2c_cmd;

extern uint8_t Buffer_Rx2[32];
extern uint8_t Buffer_Tx2[32];
extern __IO uint8_t Tx_Idx2 , Rx_Idx2;

/* Exported functions ------------------------------------------------------- */
void I2C_Slave_Init(void);
void I2C_Slave_BufferReadWrite(void);
void I2C_Slave_STOP_UserCallback();					/*The function is called when the RX transfer completed with STOP signal generated by master.*/
uint8_t Read_I2C_Slave_Cmd();

#endif
